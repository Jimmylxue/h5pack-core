"use strict";var e=require("path"),s=require("os"),a=require("fs/promises"),t=require("fs"),o=require("ora"),r=require("child_process");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=c(o);let i;let l=n.default(),p=n.default();function u(e){i.log&&p.info(e)}async function d(e){try{await a.rm(e,{recursive:!0,force:!0}),l.succeed("🙈 Success clear cache"),console.log("success clear data")}catch(s){l.fail(`🙈 remove temp dir fail in ${e}`)}}function w(e){return t.existsSync(e)}function g(s,a){t.existsSync(a)||t.mkdirSync(a,{recursive:!0});const o=t.readdirSync(s);for(const r of o){const o=e.join(s,r),c=e.join(a,r);t.statSync(o).isDirectory()?g(o,c):t.copyFileSync(o,c)}}const h={github:"https://github.com/Jimmylxue/h5pack-native.git",gitee:"https://gitee.com/jimmyxuexue/h5pack-native.git"},f={code:1e4,message:"clone异常，检查网络代理，或配置为国内代理"},y={code:10001,message:"获取静态资源异常，检查h5pack.json中entry配置"},m={code:10003,message:".env文件生成异常，请检查h5pack.json中name配置"},v={code:10004,message:"splash启动页生成异常，请检查h5pack.json中splash相关配置"},k={code:10005,message:"release APP异常，请检查安卓打包环境"},b={code:10006,message:"copy release异常，请检查h5pack.json中output配置"},j={code:10007,message:"appLogo启动页生成异常，请检查h5pack.json中logo相关配置"};function $(e,s,a=[],t){return new Promise(((t,o)=>{const c=s+" "+a.join(" "),n=r.spawn(s,a,{cwd:e});n.stdout.on("data",(e=>{u(`${c} stdout: ${e}`)})),n.stderr.on("data",(e=>{u(`${c} stderr: ${e}`)})),n.on("close",(e=>{0!==e?o(new Error(`${c} exited with code ${e}`)):t(!0)}))})).catch((e=>{t?.(e.message)}))}class S extends Error{failMessage=void 0;originErrorMessage;constructor(e,s){super(),this.failMessage=e,this.originErrorMessage=s}}async function x(s){await async function(s){const t=`\n  APP_NAME=${i.name||"H5Pack"}\n  `;try{await a.writeFile(e.resolve(s,".env"),t,"utf-8")}catch(e){throw new S(m,e.message||"write env file error")}}(s),await async function(s){if(i.splash)try{const t=e.basename(i.splash),o=e.resolve(process.cwd(),i.splash),r=e.resolve(s,`./public/splash/${t}`);if(!w(o))throw new Error("packConfig.splash is not a available path");await a.copyFile(o,r),await $(s,"yarn",["react-native","generate-bootsplash",e.resolve(s,`./public/splash/${t}`),"--platforms=android"],(e=>{throw new Error(e)}))}catch(e){throw new S(v,e.message)}}(s),await async function(s){if(i.logo)try{const t=e.basename(i.logo),o=e.resolve(process.cwd(),i.logo),r=e.resolve(s,`./public/logo/${t}`);w(o)&&(await a.copyFile(o,r),await $(s,"npx",["iconkits",`--input=./public/logo/${t}`],(e=>{throw new Error(e)})))}catch(e){throw new S(j,e.message)}}(s),l.stop(),l.succeed("✅ Custom Config Success")}async function E(s,a){try{const t=e.resolve(process.cwd(),i.entry);if(!w(t))return void a("packConfig.entry is not a available path");const o=e.join(s,"./h5pack-native/public/webview/dist");await g(t,o)}catch(e){a(e.message||"packConfig.entry is not a available path")}}async function C(s){const a=e.join(s,"./h5pack-native");l.start("🚩 Download Source ......"),await $(s,"git",["clone",h[i.registry],a],(e=>{throw l.stop(),new S(f,e)})),l.succeed("✅ download success!"),await E(s,(e=>{throw new S(y,e)})),l.start("🚩 Install Dependencies ......"),await $(a,"yarn",[],(e=>{throw l.stop(),new S(f,e)})),l.succeed("✅ Dependencies Installed!"),l.start("🚩 Handle Custom Config ......"),await x(a),l.succeed("✅ Handle Success!"),l.start("😊 Building App ......"),await $(a,"yarn",["release"],(e=>{throw l.stop(),new S(k,e)})),l.stop(),l.start("✅ building Success ......"),l.start("😊 Generate Apk ......"),await async function(s,a){try{const a=e.resolve(process.cwd(),i.output||"./");if(!w(a))throw new Error("packConfig.output is not a available path");await t.promises.copyFile(e.join(s,"./h5pack-native/android/app/build/outputs/apk/release/app-release.apk"),e.resolve(a,"app-release.apk"))}catch(e){a(e.message||"packConfig.output is not a available path")}}(s,(e=>{throw new S(b,e)})),l.stop(),l.succeed("🎉 Packaging completed !!! 🎉")}let M;async function q(){try{const a=s.tmpdir();M=e.join(a,"app-build"),await t.promises.mkdir(M,{recursive:!0}),await C(M)}catch(e){!function(e){const s=n.default();s.fail(`error: ${e.failMessage?.message},code: ${e.failMessage?.code}, message: ${e?.originErrorMessage}`),s.clear()}(e),d(M)}}process.on("SIGINT",(async()=>{await d(M),process.exit()})),module.exports=()=>{i=require(e.resolve(process.cwd(),"h5pack.json")),i.registry=i.registry||"github",q()};
